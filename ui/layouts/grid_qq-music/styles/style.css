html, body{
  margin: 0;
  padding: 0;
  background-color: #f3f3f3;
}

.page {
  min-width: 1400px;
  height: 100%;
}

li {
  list-style: none;
}

.page-icon {}

.section {
  background: linear-gradient(0.5turn, #f2f2f2,#fafafa);
  margin-bottom: 20px;
}

.header {
  /* 
  当谁当宽度百分数时，元素的宽度都会以当前窗口宽度计算，
  这样在子元素有固定宽度且在窗口拉升时窗口宽度小于子元素所占据的最小宽度时，
  便会导致子元素溢出盒子，造成布局上的问题。
  
  尝试过用定位来做header的布局，使其固定在顶部，占据全部宽度，
  但是div默认占一行，在不指定宽度时会自适应占据窗口所有长度，
  故而不用定位便可以完成。

  这个任务涉及到背景图片的问题：
  * 当元素的有背景且元素必须有内边距与外边距时，若直接设置该元素的背景颜色，此时margin部分是不会有背景颜色的，
    可在该元素外部套一个div，用以设置背景颜色，这样可以解决这个问题。
  */
  background: #ffffff;
}

.section-inner {
  padding: 20px 50px 20px;
  width: 1200px;
  margin: auto;
}

.section-title {
  text-align: center;
}

.play-section {}

.cats {
  display: flex;
  justify-content: center;
  margin-bottom: 1.5em;
}

.cat-item {
  font-size: 15px;
  color: #333;
  margin: 0 1.5em;
}

.cat-active {
  color: #31c27c;
}

.play-list {
  display: grid;
  gap: 15px;
  grid-template-columns: repeat(5, 1fr);
}

.play-item {
  width: 100%;
}

.listen-num, .singer, .interval {
  color: #999;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 14px;
  margin-top: 5px;
}

.title {
  margin-top: 1em;
  font-size: 14px;
  color: #000;
  cursor: pointer;

  /* 顺序不能乱 */
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  margin-bottom: 5px;
}

.title:hover {
  color: #31c27c;
}

.covers {
  position: relative;
  display: block;
  width: 100%;
  overflow: hidden;
}

.cover {
  transition: all .75s;
  width: 100%;
}

.cover-mask {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  background: #000;
  opacity: 0;
  transition: all .75s;
}

.play-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: all .75s;
}

.covers:hover .cover {
  transform: scale(1.07);
}

.covers:hover .cover-mask {
  opacity: 0.2;
}

.covers:hover .play-icon {
  transform: translate(-50%, -50%) scale(1.07);
  opacity: 1;
}

.song-section {
  position: relative;
}

.play-all {
  position: absolute;
  height: 40px;
  /* width: 120px; */
  box-sizing: border-box;
  border: 1px #c9c9c9 solid;
  top: 80px;
  left: 50px;
  padding: 0 20px;
  line-height: 40px;
  font-size: 15px;
}

.play-all:hover {
  background: #ededed;
}

.play-all img {
  width: 18px;
  vertical-align: middle;
  margin-top: -4px;
}

.song-list {
  display: grid;
  gap: 2em;
  grid-template-columns: repeat(3, 1fr);
}

.song-item {
  height: 86px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.song-cover {
  width: 86px;
  height: 86px;
}

.info {
  flex: 1;
  margin: 0 1em;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  height: 60%;
}

.mv-title {
  letter-spacing: 5px;
}

.mv-list {
  display: grid;
  gap: 15px;
  grid-template-columns: repeat(5, 1fr);
}

.mv-item {
  width: 100%;
}

.watch-icon {
  width: 18px;
  vertical-align: middle;
}

.name, .singer {
  max-width: 200px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}